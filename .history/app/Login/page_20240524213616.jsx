"use client"
import React, { useState } from 'react';
import validator from 'validator';
import Head from 'next/head'
import Link from 'next/link'
import { VStack, Button } from '@chakra-ui/react'
import { Inter } from 'next/font/google'
import styles from './page.module.css'
const inter = Inter({ subsets: ['latin'] })
export default function Login() {
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [emailError, setEmailError] = useState("");
  const [nameError, setNameError] = useState("");

  const validateForm = () => {
    let isValid = true;

    if (!validator.isEmail(email) && !validator.isLength(name, { min: 2, max: 20 }) && validator.isAlpha(name.replace(/\s/g, ''))) {
      setEmailError("Please enter a valid email address");
      setNameError("Please enter a valid name. The name must be two words only.");
      isValid = false;
    } else if (!validator.isEmail(email)) {
      setEmailError("Please enter a valid email address");
      setNameError("");
      isValid = false;
    } else if (!validator.isLength(name, { min: 2, max: 20 }) && validator.isAlpha(name.replace(/\s/g, ''))) {
      setEmailError("");
      setNameError("Please enter a valid name. The name must be two words only.");
      isValid = false;
    }
    return isValid;
  }

  const handleSubmit = (e) => {
    e.preventDefault();

    if (validateForm()) {
      setEmail("");
      setName("");
      setEmailError("");
      setNameError("");
      alert("Form submitted successfully");
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Contact</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <main className={styles.login}>
        <h1 className={styles.title}>
          Contact Me:
        </h1>
        <div className={styles.grid}>
          <form onSubmit={handleSubmit}>
            <br></br>
            <div className="form-group">
              <label htmlFor="name">Full Name</label>
              <input type="text" name="name" id="name" placeholder="" value={name} onChange={(e) => setName(e.target.value)} />
              <br></br>
              <br></br>
              <label htmlFor="email">Email address</label>
              <input type="email" className="form-control" id="email" placeholder="Enter email" value={email} onChange={(e) => setEmail(e.target.value)} />
              <br></br>
              <div id="email-error">{emailError}</div>
              <div id="name-error">{nameError}</div>
            </div>
            <button type="submit" className="btn btn-primary">Submit</button>
          </form>
        </div>
        <VStack padding="10">
          <Link href="/">
            <Button backgroundColor="brand.100">Home</Button>
          </Link>
        </VStack>
      </main>
    </div>
  )
}